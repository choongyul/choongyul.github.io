<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 나의 경험을 기록하는 공간</title>
    <link>https://choongyul.github.io/post/</link>
    <description>Recent content in Posts on 나의 경험을 기록하는 공간</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 28 Sep 2020 06:27:11 +0900</lastBuildDate>
    
	<atom:link href="https://choongyul.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>프로그래밍 언어론 - Day2</title>
      <link>https://choongyul.github.io/2020/09/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4%EB%A1%A0-day2/</link>
      <pubDate>Mon, 28 Sep 2020 06:27:11 +0900</pubDate>
      
      <guid>https://choongyul.github.io/2020/09/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4%EB%A1%A0-day2/</guid>
      <description>소프트웨어  사람이 만들고 컴퓨터가 실행한다.  컴퓨터 언어 계층  컴퓨터 언어는 계층 구조를 가지고 있다. 컴파일러라는 소프트웨어가 상위언어에서 하위언어로 변경하여 컴퓨터가 프로그램을 실행할 수 있게 해준다.  컴파일 주요원칙 Compositional 하다  작은 단위로 구문을 해석한 다음 합치는 방법을 채택한다. 글을 쓰는 것과 같이, 문장을 번역해서 문단을 만들고 문단을 을 모아 챕터를 만들고 결국 책을 만드는 것과 같다.  Invariant 하다.  A는 항상 A이다. 정황에 따라 뜻이 변경되지 않는다는 뜻이다.</description>
    </item>
    
    <item>
      <title>프로그래밍 언어론 - Day1</title>
      <link>https://choongyul.github.io/2020/09/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4%EB%A1%A0-day1/</link>
      <pubDate>Wed, 23 Sep 2020 06:53:55 +0900</pubDate>
      
      <guid>https://choongyul.github.io/2020/09/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4%EB%A1%A0-day1/</guid>
      <description>프로그래밍 언어란?  자동 실행을 염두에 두고 만들어진 언어다. 프로그래밍 언어 자체는 논리학과 수학 아래서 발전할 수 있다.  예제&amp;gt; 1. 컴퓨터라는 기계에 명령하는 도구이다. 2. 프로그래머들 사이의 소통 수단이다. 3. 상위 레벨 디자인을 표현하는 도구이다. 4. 알고리즘을 기술하는 표기법이다. 프로그래밍 언어론을 왜 배우는가?  프로그래밍 언어를 더 잘이해하기 위해 프로그래밍 언어를 선택할 수 있는 능력을 증대 새로운 프로그래밍 언어를 배우기 쉽게 새로운 프로그래밍언어를 설계하기 쉽게 현재 사용하고 있는 언어를 쉽게 이해하게  소프트웨어는 미개하다.</description>
    </item>
    
    <item>
      <title>프로그래밍이란?</title>
      <link>https://choongyul.github.io/2020/09/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80/</link>
      <pubDate>Tue, 22 Sep 2020 06:00:15 +0900</pubDate>
      
      <guid>https://choongyul.github.io/2020/09/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80/</guid>
      <description>컴퓨터  컴퓨터는 프로그램 언어로 기술된 수학적 계산, 논리적 연산을 수행하는 기계이다.  프로그래밍이란?  특정한 결과를 얻기 위해 프로그램을 기획하고 만드는 일이다. 문제를 분석하고, 알고리즘을 만들고 검증하고 구현하는 일과 관련되어 있다.  개발자와 사용자  둘은 관심 분야가 다르다.  개발자 관심  사용자가 어떤 기능을 원하는지? 사용자는 어떤 순서로 주어진 기능을 수행하는지? 프로그램 성능의 기준값은 무엇인지? 실행환경에 특이점은 없는지?  사용자 관심  나의 Pain Point를 개발된 기능이 해결해 줄수 있는지?</description>
    </item>
    
    <item>
      <title>블로그 만들며 배운 Submodule</title>
      <link>https://choongyul.github.io/2020/09/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EB%A9%B0-%EB%B0%B0%EC%9A%B4-submodule/</link>
      <pubDate>Mon, 21 Sep 2020 06:06:15 +0900</pubDate>
      
      <guid>https://choongyul.github.io/2020/09/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EB%A9%B0-%EB%B0%B0%EC%9A%B4-submodule/</guid>
      <description>들어가며 블로그를 만들기 위해 HUGO Quick-Start 가이드를 보는데
git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 이 보인다. ‘엥’ 이건 뭥미? Submodule이 무엇인지 살펴보자!
Submodule 이란 뭘까? Submodule 이란, Dependency 관리 시스템이라 생각해도 좋다.
이렇게 가정해보자! 당신은 데이터 베이스를 사용하는 웹 애플리케이션을 제작해야 한다. 데이터베이스와 어떻게 연결해야 할 것인가? 당신은 연결을 위해 Maven 프로젝트를 만들고 필요한 Repository와 Dependency를 pom.xml에 추가하기로 마음먹었다. 근데 문제가 발생했다. 연결이 되지 않는다. 연결 라이브러리 소스코드를 수정해야 할 것 같다.</description>
    </item>
    
  </channel>
</rss>